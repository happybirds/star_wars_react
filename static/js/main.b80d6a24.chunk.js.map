{"version":3,"sources":["utils/Appbar.ts","App.tsx","store/reducers/index.ts","store/index.ts","index.tsx","types/index.ts","store/reducers/dataReducer.ts"],"names":["Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","easeOut","enteringScreen","AppBar","MuiAppBar","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","Starwars","React","App","useTheme","setOpen","Box","sx","CssBaseline","position","Toolbar","Typography","variant","noWrap","component","IconButton","color","edge","onClick","path","index","element","Home","fallback","NoMatch","Drawer","flexShrink","anchor","direction","Divider","List","ListItem","button","Link","to","ListItemText","primary","Card","CardActionArea","CardMedia","image","alt","height","CardContent","rootReducer","combineReducers","user","dataReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","ActionType","initialState","isLoading","error","data","count","fetchDataAction","type","FETCH_DATA","fetchDataSuccessAction","payload","FETCH_DATA_SUCCESS","fetchErrorAction","FETCH_ERROR","state","action"],"mappings":"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","file":"static/js/main.b80d6a24.chunk.js","sourcesContent":["//use material style\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\n\nconst drawerWidth = 240;\nexport const Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginRight: -drawerWidth,\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nexport const AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  }),\n}));\n\nexport const DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-start',\n}));","import * as React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport {\n  useTheme,\n  Box,\n  Drawer,\n  Toolbar,\n  CssBaseline,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { Main, AppBar, DrawerHeader } from \"./utils/Appbar\";\n\nconst drawerWidth = 240;\n\n//lazy loading\nconst Starwars = React.lazy(() => import(\"./components/Starwars\"));\n\nexport default function App() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap sx={{ flexGrow: 1 }} component=\"div\">\n            Star Wars\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            sx={{ ...(open && { display: \"none\" }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Main open={open}>\n        <DrawerHeader />\n        <Routes>\n          <Route path=\"/\">\n            <Route index element={<Home />} />\n            <Route\n              path=\"starwars/:name\"\n              element={\n                <React.Suspense fallback={<>Loading</>}>\n                  <Starwars />\n                </React.Suspense>\n              }\n            />\n            <Route path=\"*\" element={<NoMatch />} />\n          </Route>\n        </Routes>\n      </Main>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n\n        <List>\n          <ListItem button component={Link} to=\"/\">\n            <ListItemText primary={\"Home\"} />\n          </ListItem>\n          <ListItem button component={Link} to=\"/starwars/person\">\n            <ListItemText primary={\"Person\"} />\n          </ListItem>\n          <ListItem button component={Link} to=\"/starwars/planets\">\n            <ListItemText primary={\"Planets\"} />\n          </ListItem>\n          <ListItem button component={Link} to=\"/starwars/movies\">\n            <ListItemText primary={\"Movies\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            image=\"/main.jpeg\"\n            alt=\"green iguana\"\n            height=\"400px\"\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Star Wars is an American epic space opera multimedia franchise\n              created by George Lucas, which began with the eponymous 1977 film\n              and quickly became a worldwide pop-culture phenomenon.\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { dataReducer } from './dataReducer';\n\nexport const rootReducer = combineReducers({\n    user: dataReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n            <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// constants\n\nexport enum ActionType {\n    FETCH_DATA = 'FETCH_DATA',\n    FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS',\n    FETCH_ERROR = 'FETCH_ERROR',\n}\n\n\n//interface\nexport interface FetchDataAction {\n    type: ActionType.FETCH_DATA;\n}\nexport interface FetchDataSuccessAction {\n    type: ActionType.FETCH_DATA_SUCCESS;\n    payload: any[];\n    count: number;\n}\nexport interface FetchErrorAction {\n    type: ActionType.FETCH_ERROR;\n    payload: string;\n}\n\nexport interface dataState {\n    isLoading: boolean;\n    error: null | string;\n    data: any[];\n    count: number;\n}\n\n//type\nexport type dataAction =\n    | FetchDataAction\n    | FetchDataSuccessAction\n    | FetchErrorAction;\n\n","import {\n    FetchErrorAction,\n    FetchDataAction,\n    FetchDataSuccessAction,\n    dataAction,\n    ActionType,\n    dataState,\n} from '../../types';\n\nconst initialState: dataState = {\n    isLoading: false,\n    error: null,\n    data: [],\n    count: 0,\n};\n\nexport const fetchDataAction = (): FetchDataAction => ({\n    type: ActionType.FETCH_DATA,\n});\n\nexport const fetchDataSuccessAction = (\n    payload: any[],\n    count: number,\n): FetchDataSuccessAction => ({\n    type: ActionType.FETCH_DATA_SUCCESS,\n    payload,\n    count,\n});\n\nexport const fetchErrorAction = (payload: string): FetchErrorAction => ({\n    type: ActionType.FETCH_ERROR,\n    payload,\n});\n\nexport const dataReducer = (\n    state = initialState,\n    action: dataAction\n): dataState => {\n    switch (action.type) {\n        case ActionType.FETCH_DATA:\n            return { isLoading: true, error: null, data: [],count:0 };\n        case ActionType.FETCH_DATA_SUCCESS:\n            return { isLoading: false, error: null, data: action.payload,count:action.count };\n        case ActionType.FETCH_ERROR:\n            return { isLoading: false, error: action.payload, data: [],count:0 };\n        default:\n            return state;\n    }\n};\n\n"],"sourceRoot":""}